@page "/buttons"

<MdcHeadline3>Buttons</MdcHeadline3>

<DemoComponent>
    <TopBar>
        <MdcTabBar @bind-ActiveTab="tab">
            <MdcTab Label="TEXT" />
            <MdcTab Label="OUTLINED" />
            <MdcTab Label="CONTAINED" />
        </MdcTabBar>
    </TopBar>
    <Content>
        <DemoComponentContainer @ref="demo">
        @if (tab == 0)
        {
            <MdcButton ButtonType="MdcButtonType.Text" Label="TEXT BUTTON" Disabled="disabled.Value" Icon="@If(icon, MdcIcons.Bookmark)"  TrailingIcon="trailingIcon.Value" OnClick='() => ClickHandler("TEXT BUTTON")' />
        }
        else if (tab == 1)
        {
            <MdcButton ButtonType="MdcButtonType.Outlined"  Label="OUTLINED BUTTON" Disabled="disabled.Value" Icon="@If(icon, MdcIcons.Bookmark)" TrailingIcon="trailingIcon.Value" OnClick='() => ClickHandler("OUTLINED BUTTON")' />
        }
        else if (tab == 2)
        {
            <MdcButton ButtonType="MdcButtonType.Contained" Label="CONTAINED BUTTON" Disabled="disabled.Value" Icon="@If(icon, MdcIcons.Bookmark)" TrailingIcon="trailingIcon.Value" OnClick='() => ClickHandler("CONTAINED BUTTON")' />
        }
        </DemoComponentContainer>
    </Content>
    <TopOption>
        Options
    </TopOption>
    <Options>            
        <MdcCheckbox Label="Disabled" @bind-Value="disabled" />
        <MdcCheckbox Label="Icon" @bind-Value="icon" />
        <MdcCheckbox Label="Trailing icon" @bind-Value="trailingIcon" />
    </Options>
</DemoComponent>

<MdcHeadline3>Icon Buttons</MdcHeadline3>
<p>
    <MdcIconButton Icon="favorite" OnClick='() => ClickHandler("ICON BUTTON")' />
    <MdcIconButton Icon="favorite" Disabled="true" OnClick='() => ClickHandler("ICON BUTTON DISABLED")' />
</p>
<MdcHeadline3>Icon Buttons Toggle</MdcHeadline3>
<p>
    <MdcIconButtonToggle Icon="favorite" ToggleIcon="favorite_bordered" Title="Favorite" Label="Favorite " @bind-Selected="toggleSelected" OnClick='() => ClickHandler("TOGGLE")' />
    <MdcIconButtonToggle Icon="favorite" ToggleIcon="favorite_bordered" Title="Favorite" Label="Favorite" @bind-Selected="toggleSelected" Disabled="true" OnClick='() => ClickHandler("TOGGLE DISABLED")' />
</p>

<p>
    <span>@message</span>
</p>
<p>
    <span>Toggle selected: @toggleSelected</span>
</p>

@code {
    string message;
    int tab;
    DemoComponentContainer demo;
    string option;
    
    bool? disabled = false;
    bool? icon = false;
    bool? trailingIcon = false;

    string iconName;

    bool toggleSelected;

    T If<T>(bool? expression, T valueTrue)
    {
        return (expression ?? false) ? valueTrue : default(T);
    }

    T If<T>(bool? expression, T valueTrue, T valueFalse)
    {
        return (expression ?? false) ? valueTrue : valueFalse;
    }


    private Task ClickHandler(string command)
    {
        message = $"Pressed: {command}";
        return Task.CompletedTask;
    }

}